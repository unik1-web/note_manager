# Этап2_Финальное_Юнин_Константин.
# Обработка дедлайнов

import re
from datetime import date, datetime


phrase = (
    "Внимание! Дедлайн истёк ", "назад",
    "До дедлайна осталось ", "","Дедлайн сегодня!",
    "Текущая дата: ",
    "Введите дату дедлайна (в любом формате 10-10-2024, 10.10.2024, 10:10:2024, 10/10/2024,",
    " 2024-10-10, 2024.10.10, 2024:10:10, 2024/10/10):",
    "Неверный формат даты. Пожалуйста, убедитесь, что дата введена правильно.",
    "{} {}  день {}", "{} {} дня {}", "{} {} дней {}"
)      # Словарь фраз для вывода


def today():      # Получение текущей даты
    return date.today()


def delta(issue):       # Разница в днях между датами
    return (today() - issue).days


def day_(phrase1, num_, phrase2):       # Вывод предупреждения с разным склонением слова "день"
    k = 11        # Переменная по умолчанию выдает фразу "дней"
    sp1 = [
        1, 21, 31, 41, 51, 61, 71, 81, 91,
        101, 121, 131, 141, 151, 161, 171,
        181, 191
    ]          # Список дат с выводом фразы "день"
    sp2 = [
        2, 3, 4, 22, 23, 24, 32, 33, 34, 42,
        43, 44, 52, 53, 54, 62, 63, 64, 72,
        73, 74, 82, 83, 84, 92, 93, 94, 102,
        103, 104, 122, 123, 124
    ]          # Список дат с выводом фразы "дня"
    if num_ in sp1: k = 9
    elif num_ in sp2: k = 10
    print(
        phrase[k].format(phrase1, num_, phrase2)
    )          # Вывод форматированной строки, зависящей от количества дней


def replace_dates(match_):       # Обработка любого ввода даты
    a = []        # Список вхождений даты в строке
    b = 0         # Временная переменная преобразования даты
    c = [
        '\\d{2}/\\d{2}/\\d{2,4}', '\\d{2}-\\d{2}-\\d{2,4}',
        '\\d{2}:\\d{2}:\\d{2,4}', '\\d{2}.\\d{2}.\\d{2,4}',
        '\\d{2,4}/\\d{2}/\\d{2}', '\\d{2,4}-\\d{2}-\\d{2}',
        '\\d{2,4}:\\d{2}:\\d{2}', '\\d{2,4}.\\d{2}.\\d{2}'
    ]         # Список шаблонов даты
    d = [
        '%d/%m/%Y', '%d-%m-%Y', '%d:%m:%Y',
        '%d.%m.%Y', '%Y/%m/%d', '%Y-%m-%d',
        '%Y:%m:%d', '%Y.%m.%d'
    ]         # Список форматов вывода даты
    for i,j in zip(c,d):
        try:
            a = re.findall(i, match_)     # Поиск в строке ввода по имеющимся в списке [c] шаблонам
            b = datetime.strptime(a[0], j)    # Преобразование вырезанной строки в тип datetime
            return b
        except:
            continue


def data_entry_():
    current_ = today()    # Получение текущей даты
    while True:
        try:
            issue_ = input(
                phrase[6] + phrase[7] + "\n "
                )        # Ввод даты дедлайна
            issue_ = replace_dates(issue_)      # Обработка любого ввода даты
            issue_ = datetime.date(issue_)      # Преобразование datetime в date
            num_days = delta(issue_)        # Разница в днях между датами
            if issue_ < current_:
                day_(
                    phrase[0], num_days, phrase[1]
                )         # Вывод предупреждения при положительной разницы дней
            elif issue_ > current_:
                day_(
                    phrase[2], -num_days, phrase[3]
                )         # Вывод предупреждения при отрицательной разнице дней
            else:
                print(phrase[4])       # Вывод: Дедлайн сегодня!
            break        # Выход из цикла while при правильном вводе и преобразовании даты
        except:
            print(phrase[8])      # Вывод при любой ошибке ввода даты пользователем
    return 0        # Выход из цикла while


# Программа
current_date = today()        # Получение текущей даты
print(
    phrase[5], today().strftime("%d.%m.%Y")
)           # Вывод текущей даты в формате DD-MM-YYYY
data_entry_()         # Ввод и обработка данных с выводом предупреждений